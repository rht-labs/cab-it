pipeline {

    agent {
        label "master"
    }

    environment {
        // Global Vars
        PIPELINES_NAMESPACE = "cab-it-ci-cd"
        DEV_NAMESPACE = "cab-it-dev"
        TEST_NAMESPACE = "cab-it-test"
        APP_NAME = "python-app"
        JENKINS_TAG = "${JOB_NAME}.${BUILD_NUMBER}".replace("/", "-")
        NEXUS_SERVICE_HOST = 'nexus'
        NEXUS_SERVICE_PORT = '8081'
        OCP_API_SERVER = "${OPENSHIFT_API_URL}"
        OCP_TOKEN = readFile('/var/run/secrets/kubernetes.io/serviceaccount/token').trim()
    }

    options {
        buildDiscarder(logRotator(numToKeepStr:'10'))
        timeout(time: 15, unit: 'MINUTES')
        ansiColor('xterm')
        timestamps()
    }

    stages {
        stage("test and build") {
            agent {
                node {
                    label "jenkins-slave-python"  
                }
            }
            steps {
                sh '''
                    cd app/app/
                    pwd
                    ls -al
                    python -m virtualenv env
                    source env/bin/activate
                    pip install -r requirements.txt
                '''
            }
        }
        stage("bake image") {
            agent {
                node {
                    label "master"  
                }
            }
            steps {
                echo '### Create Linux Container Image from source ###'
                sh  '''
                        oc patch bc ${APP_NAME} -p "{\\"spec\\":{\\"output\\":{\\"to\\":{\\"kind\\":\\"ImageStreamTag\\",\\"name\\":\\"${APP_NAME}:${JENKINS_TAG}\\"}}}}"
                        oc start-build ${APP_NAME} -w -n ${PIPELINES_NAMESPACE}
                    '''
            }
            post {
                always {
                    archive "**"
                }
            }
        }
        stage("deploy") {
            agent {
                node {
                    label "master"  
                }
            }
            steps {
                echo '### tag image for namespace ###'
                sh  '''
                    oc tag ${PIPELINES_NAMESPACE}/${APP_NAME}:${JENKINS_TAG} ${DEV_NAMESPACE}/${APP_NAME}:${JENKINS_TAG}
                    '''
                echo '### set env vars and image for deployment ###'
                sh '''
                    oc set image dc/${APP_NAME} ${APP_NAME}=docker-registry.default.svc:5000/${DEV_NAMESPACE}/${APP_NAME}:${JENKINS_TAG}
                    oc rollout latest dc/${APP_NAME}
                '''
                echo '### Verify OCP Deployment ###'
                openshiftVerifyDeployment depCfg: env.APP_NAME, 
                    namespace: env.DEV_NAMESPACE, 
                    replicaCount: '1', 
                    verbose: 'false', 
                    verifyReplicaCount: 'true', 
                    waitTime: '',
                    waitUnit: 'sec'
            }
        }
    }
}